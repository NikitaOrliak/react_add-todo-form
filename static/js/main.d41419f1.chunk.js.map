{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","defaultTodos","getMaxId","Math","max","App","useState","setTodos","setTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","prevTodos","type","placeholder","value","onChange","sanitizedValue","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAEED,EAFFC,MACAC,EACEF,EADFE,KAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCNMG,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAR,EAEEM,EAFFN,KAHF,EAKIM,EADFG,iBAJF,SAOA,OACE,0BACE,UAASF,EACTJ,UAAWO,IAAW,WAAY,CAChC,sBAAuBD,IAH3B,UAME,oBAAIN,UAAU,kBAAd,SACGK,IAIDR,GACE,cAAC,EAAD,CAAUA,KAAMA,QCtBbW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SAEIS,EAAMC,KAAI,SAAAP,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKC,UCb3B,GACb,CACEA,GAAI,EACJL,KAAM,gBACNY,SAAU,OACVb,MAAO,qBAET,CACEM,GAAI,EACJL,KAAM,eACNY,SAAU,YACVb,MAAO,qBAET,CACEM,GAAI,EACJL,KAAM,mBACNY,SAAU,WACVb,MAAO,sBAET,CACEM,GAAI,EACJL,KAAM,mBACNY,SAAU,WACVb,MAAO,6BAET,CACEM,GAAI,EACJL,KAAM,mBACNY,SAAU,SACVb,MAAO,4BAET,CACEM,GAAI,EACJL,KAAM,uBACNY,SAAU,mBACVb,MAAO,2BAET,CACEM,GAAI,EACJL,KAAM,kBACNY,SAAU,eACVb,MAAO,0BAET,CACEM,GAAI,EACJL,KAAM,2BACNY,SAAU,gBACVb,MAAO,wBAET,CACEM,GAAI,EACJL,KAAM,kBACNY,SAAU,WACVb,MAAO,2BAET,CACEM,GAAI,GACJL,KAAM,qBACNY,SAAU,iBACVb,MAAO,2BCnDX,SAASc,EAAYC,GACnB,OAAOC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKO,KAAOS,MACzC,KAGT,IAAMG,ECbS,CACb,CACEZ,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXO,OAAQ,IDJyBH,KAAI,SAAAP,GAAI,kCACxCA,GADwC,IAE3CN,KAAMe,EAAYT,EAAKU,aAGzB,SAASI,EAASR,GAKhB,OAJcS,KAAKC,IAAL,MAAAD,KAAI,YACbT,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKC,QAGb,EAGV,IAAMgB,EAAM,WACjB,MAA0BC,mBAASL,GAAnC,mBAAOP,EAAP,KAAca,EAAd,KAEA,EAA0BD,mBAAS,IAAnC,mBAAOhB,EAAP,KAAckB,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAA4BJ,mBAAS,GAArC,mBAAOR,EAAP,KAAea,EAAf,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAgDA,OACE,sBAAK5B,UAAU,MAAf,UACE,+CAEA,uBACE6B,OAAO,aACPC,OAAO,OACPC,SA9Ce,SAACC,GACpBA,EAAMC,iBAENR,GAAepB,GACfuB,GAAgBf,GAEXR,GAAUQ,IAIfS,GAAS,SAAAY,GAAS,4BACbA,GADa,CAEhB,CACE9B,GAAIa,EAASR,GACbJ,QACAC,WAAW,EACXO,SACAhB,KAAMe,EAAYC,SAvBtBU,EAAS,IACTE,GAAc,GACdC,EAAU,GACVE,GAAe,KA8Cb,UAKE,sBAAK5B,UAAU,QAAf,UACE,uBACEmC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOhC,EACPiC,SA9BgB,SAACN,GACzB,IAGMO,EAHaP,EAAMQ,OAAOH,MAGEI,QADpB,8HACmC,IAEjDlB,EAASgB,GACTd,GAAc,MA0BND,GACE,sBAAMxB,UAAU,QAAhB,qCAKN,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRqC,MAAOxB,EACPyB,SAjCiB,SAACN,GAC1BN,GAAWM,EAAMQ,OAAOH,OACxBT,GAAe,IA4BT,UAKE,wBAAQS,MAAM,IAAIK,UAAQ,EAA1B,2BAEE5B,EAAgBJ,KAAI,gBAAGN,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAP,OAClB,wBACEsC,MAAOjC,EADT,SAIGL,GAFIK,SASXuB,GACE,sBAAM3B,UAAU,QAAhB,qCAKN,wBAAQmC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU1B,MAAOA,QErIvBkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d41419f1.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../helpers/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../helpers/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed = false,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && (\n          <UserInfo user={user} />\n        )\n      }\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../helpers/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './helpers/Todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nconst defaultTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getMaxId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(defaultTodos);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setTitleError(false);\n    setUserId(0);\n    setUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    setTodos(prevTodos => [\n      ...prevTodos,\n      {\n        id: getMaxId(todos),\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      },\n    ]);\n\n    reset();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n\n    const regex = /[^a-zA-Z0-9А-ЩЬЮЯҐЄІЇа-щьюяґєії]/g;\n    const sanitizedValue = inputValue.replace(regex, '');\n\n    setTitle(sanitizedValue);\n    setTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {\n            titleError && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(({ id, name }) => (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              ))\n            }\n\n          </select>\n          {\n            userIdError && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}